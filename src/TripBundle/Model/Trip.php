<?php
/**
 * Trip
 *
 * PHP version 7.1.3
 *
 * @category Class
 * @package  TripBundle\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Trips
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 */

namespace TripBundle\Model;

use JMS\Serializer\Annotation as Serializer;
use Symfony\Component\Validator\Constraints as Assert;
use JMS\Serializer\Annotation\Type;
use JMS\Serializer\Annotation\SerializedName;
use TripBundle\Entity\Trip as Entity;
use TripBundle\Entity\Country;
use TripBundle\Entity\Account;

/**
 * Class representing the Trip model.
 *
 * @package TripBundle\Model
 * @author  OpenAPI Generator team
 */
class Trip
{
    /**
     * @var Country
     * @Serializer\Exclude()
     * @SerializedName("country")
     * @Assert\Type(Country::class)
     * @Type(Country::class)
     */
    protected $country;

    /**
     * @var \DateTime
     * @SerializedName("started_at")
     * @Assert\NotNull()
     * @Assert\Date()
     * @Type("DateTime<'Y-m-d'>")
     */
    protected $startedAt;

    /**
     * @var \DateTime
     * @SerializedName("finished_at")
     * @Assert\NotNull()
     * @Assert\Date()
     * @Assert\GreaterThanOrEqual(propertyPath="started_at")
     * @Type("DateTime<'Y-m-d'>")
     */
    protected $finishedAt;

    /**
     * @var string
     * @SerializedName("notes")
     * @Assert\NotNull()
     * @Assert\Type("string")
     * @Type("string")
     */
    protected $notes;

    /**
     * @var int
     * @SerializedName("id")
     * @Assert\NotNull()
     * @Assert\Type("int")
     * @Type("int")
     */
    protected $id;

    /**
     * @var int
     * @Serializer\Exclude()
     * @SerializedName("created_by")
     * @Assert\NotNull()
     * @Assert\Type(Account::class)
     * @Type(Account::class)
     */
    protected $createdBy;

    /**
     * Constructor
     * @param mixed[] $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->country = isset($data['country']) ? $data['country'] : null;
        $this->startedAt = isset($data['startedAt']) ? $data['startedAt'] : null;
        $this->finishedAt = isset($data['finishedAt']) ? $data['finishedAt'] : null;
        $this->notes = isset($data['notes']) ? $data['notes'] : null;
        $this->id = isset($data['id']) ? $data['id'] : null;
        $this->createdBy = isset($data['createdBy']) ? $data['createdBy'] : null;
    }

    public static function fromEntity(Entity $trip)
    {
        $dto = new self();
        $dto->setId($trip->getId())
            ->setCountry($trip->getCountry())
            ->setStartedAt($trip->getStartedAt())
            ->setFinishedAt($trip->getFinishedAt())
            ->setNotes($trip->getNotes())
            ->setCreatedBy($trip->getCreatedBy());

        return $dto;
    }

    /**
     * Gets country.
     *
     * @return Country
     */
    public function getCountry()
    {
        return $this->country;
    }

    /**
     * Sets country.
     *
     * @param Country $country
     *
     * @return $this
     */
    public function setCountry($country)
    {
        $this->country = $country;

        return $this;
    }

    /**
     * @Serializer\VirtualProperty()
     * @SerializedName("country")
     */
    public function country()
    {
        return $this->country->getCode();
    }

    /**
     * Gets startedAt.
     *
     * @return \DateTime
     */
    public function getStartedAt(): \DateTime
    {
        return $this->startedAt;
    }

    /**
     * Sets startedAt.
     *
     * @param \DateTime $startedAt
     *
     * @return $this
     */
    public function setStartedAt(\DateTime $startedAt)
    {
        $this->startedAt = $startedAt;

        return $this;
    }

    /**
     * Gets finishedAt.
     *
     * @return \DateTime
     */
    public function getFinishedAt(): \DateTime
    {
        return $this->finishedAt;
    }

    /**
     * Sets finishedAt.
     *
     * @param \DateTime $finishedAt
     *
     * @return $this
     */
    public function setFinishedAt(\DateTime $finishedAt)
    {
        $this->finishedAt = $finishedAt;

        return $this;
    }

    /**
     * Gets notes.
     *
     * @return string
     */
    public function getNotes()
    {
        return $this->notes;
    }

    /**
     * Sets notes.
     *
     * @param string $notes
     *
     * @return $this
     */
    public function setNotes($notes)
    {
        $this->notes = $notes;

        return $this;
    }

    /**
     * Gets id.
     *
     * @return int
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * Sets id.
     *
     * @param int $id
     *
     * @return $this
     */
    public function setId($id)
    {
        $this->id = $id;

        return $this;
    }

    /**
     * Gets createdBy.
     *
     * @return Account
     */
    public function getCreatedBy()
    {
        return $this->createdBy;
    }

    /**
     * Sets createdBy.
     *
     * @param Account $createdBy
     *
     * @return $this
     */
    public function setCreatedBy($createdBy)
    {
        $this->createdBy = $createdBy;

        return $this;
    }

    /**
     * @Serializer\VirtualProperty()
     * @SerializedName("created_by")
     */
    public function createdBy()
    {
        return $this->getCreatedBy()->getId();
    }
}


