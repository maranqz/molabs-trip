<?php
/**
 * Trip
 *
 * PHP version 7.1.3
 *
 * @category Class
 * @package  TripBundle\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Trips
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 */

namespace TripBundle\Model;

use Symfony\Component\Validator\Constraints as Assert;
use JMS\Serializer\Annotation\Type;
use JMS\Serializer\Annotation\SerializedName;
use Doctrine\ORM\Mapping as ORM;

/**
 * Trip
 *
 * @ORM\Table(name="trip", indexes={@ORM\Index(name="country_code", columns={"country_code"}), @ORM\Index(name="created_by", columns={"created_by"})})
 * @ORM\Entity
 */
class Trip
{
    /**
     * @var int|null
     * @SerializedName("id")
     * @Assert\Type("int")
     * @Type("int")
     *
     * @ORM\Column(name="id", type="integer", nullable=false)
     * @ORM\Id
     * @ORM\GeneratedValue(strategy="AUTO")
     */
    protected $id;

    /**
     * @var Country
     * @SerializedName("country")
     * @Assert\Type(Country::class)
     * @Type(Country::class)
     *
     * @ORM\ManyToOne(targetEntity="Country")
     * @ORM\JoinColumns({
     *   @ORM\JoinColumn(name="country_code", referencedColumnName="code", nullable=false)
     * })
     */
    protected $country;

    /**
     * @var Account
     * @SerializedName("created_by")
     * @Assert\Type(Account::class)
     * @Type(Account::class)
     *
     * @ORM\ManyToOne(targetEntity="Account")
     * @ORM\JoinColumns({
     *   @ORM\JoinColumn(name="created_by", referencedColumnName="id", nullable=false)
     * })
     */
    protected $createdBy;

    /**
     * @var \DateTime|null
     * @SerializedName("created_at")
     * @Assert\Date()
     * @Type("DateTime")
     *
     * @ORM\Column(name="created_at", type="date", nullable=false)
     */
    protected $createdAt;

    /**
     * @var \DateTime|null
     * @SerializedName("finished_at")
     * @Assert\Date()
     * @Type("DateTime")
     *
     * @ORM\Column(name="finished_at", type="date", nullable=false)
     */
    protected $finishedAt;

    /**
     * @var string|null
     * @SerializedName("notes")
     * @Assert\Type("string")
     * @Type("string")
     *
     * @ORM\Column(name="notes", type="text", length=65535, nullable=true)
     */
    protected $notes;

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->id        = isset($data['id']) ? $data['id'] : null;
        $this->country   = isset($data['countryId']) ? $data['countryId'] : null;
        $this->createdBy = isset($data['createdBy']) ? $data['createdBy'] : null;
        $this->createdAt  = isset($data['createdAt']) ? $data['createdAt'] : null;
        $this->finishedAt = isset($data['finishedAt']) ? $data['finishedAt'] : null;
        $this->notes      = isset($data['notes']) ? $data['notes'] : null;
    }

    /**
     * Gets id.
     *
     * @return int|null
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * Sets id.
     *
     * @param int|null $id
     *
     * @return $this
     */
    public function setId($id = null)
    {
        $this->id = $id;

        return $this;
    }

    /**
     * Gets countryId.
     *
     * @return Country
     */
    public function getCountry()
    {
        return $this->country;
    }

    /**
     * Sets countryId.
     *
     * @param Country $country
     *
     * @return $this
     */
    public function setCountry(Country $country)
    {
        $this->country = $country;

        return $this;
    }

    /**
     * Gets createdBy.
     *
     * @return int|null
     */
    public function getCreatedBy()
    {
        return $this->createdBy;
    }

    /**
     * Sets createdBy.
     *
     * @param int|null $createdBy
     *
     * @return $this
     */
    public function setCreatedBy($createdBy = null)
    {
        $this->createdBy = $createdBy;

        return $this;
    }

    /**
     * Gets createdAt.
     *
     * @return \DateTime|null
     */
    public function getCreatedAt(): ?\DateTime
    {
        return $this->createdAt;
    }

    /**
     * Sets createdAt.
     *
     * @param \DateTime|null $createdAt
     *
     * @return $this
     */
    public function setCreatedAt(\DateTime $createdAt = null)
    {
        $this->createdAt = $createdAt;

        return $this;
    }

    /**
     * Gets finishedAt.
     *
     * @return \DateTime|null
     */
    public function getFinishedAt(): ?\DateTime
    {
        return $this->finishedAt;
    }

    /**
     * Sets finishedAt.
     *
     * @param \DateTime|null $finishedAt
     *
     * @return $this
     */
    public function setFinishedAt(\DateTime $finishedAt = null)
    {
        $this->finishedAt = $finishedAt;

        return $this;
    }

    /**
     * Gets notes.
     *
     * @return string|null
     */
    public function getNotes()
    {
        return $this->notes;
    }

    /**
     * Sets notes.
     *
     * @param string|null $notes
     *
     * @return $this
     */
    public function setNotes($notes = null)
    {
        $this->notes = $notes;

        return $this;
    }
}


