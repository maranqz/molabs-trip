<?php
/**
 * TripsApiInterface
 * PHP version 7.1.3
 *
 * @category Class
 * @package  TripBundle
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Trips
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 */

namespace TripBundle\Api;

use Symfony\Component\HttpFoundation\File\UploadedFile;
use TripBundle\Model\DefaultResponse;
use TripBundle\Model\Trip;

/**
 * TripsApiInterface Interface Doc Comment
 *
 * @category Interface
 * @package  TripBundle\Api
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */
interface TripsApiInterface
{

    /**
     * Sets authentication method BearerAuth
     *
     * @param string $value Value of the BearerAuth authentication method.
     *
     * @return void
     */
    public function setBearerAuth($value);

    /**
     * Operation createTrip
     *
     * Create trip
     *
     * @param  TripBundle\Model\Trip $trip  Data of new trip (required)
     * @param  integer $responseCode     The HTTP response code to return
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return TripBundle\Model\Trip
     *
     */
    public function createTrip(Trip $trip, &$responseCode, array &$responseHeaders);

    /**
     * Operation deleteTrip
     *
     * Delete trip
     *
     * @param  string $tripId   (required)
     * @param  integer $responseCode     The HTTP response code to return
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return TripBundle\Model\DefaultResponse
     *
     */
    public function deleteTrip($tripId, &$responseCode, array &$responseHeaders);

    /**
     * Operation getTrip
     *
     * Get trip information
     *
     * @param  string $tripId   (required)
     * @param  integer $responseCode     The HTTP response code to return
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return TripBundle\Model\Trip
     *
     */
    public function getTrip($tripId, &$responseCode, array &$responseHeaders);

    /**
     * Operation updateTrip
     *
     * Update trip information
     *
     * @param  string $tripId   (required)
     * @param  TripBundle\Model\Trip $trip  Updatable data of trip (required)
     * @param  integer $responseCode     The HTTP response code to return
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return TripBundle\Model\Trip
     *
     */
    public function updateTrip($tripId, Trip $trip, &$responseCode, array &$responseHeaders);
}
