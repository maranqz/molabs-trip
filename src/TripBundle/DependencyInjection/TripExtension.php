<?php
/**
 * TripExtension
 *
 * PHP version 7.1.3
 *
 * @category Class
 * @package  TripBundle\DependencyInjection
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Trips
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 */

namespace TripBundle\DependencyInjection;

use Symfony\Component\Config\FileLocator;
use Symfony\Component\DependencyInjection\ContainerBuilder;
use Symfony\Component\DependencyInjection\Extension\Extension;
use Symfony\Component\DependencyInjection\Extension\PrependExtensionInterface;
use Symfony\Component\DependencyInjection\Loader\YamlFileLoader;
use Symfony\Component\Yaml\Yaml;

/**
 * TripExtension Class Doc Comment
 *
 * @category Class
 * @package  TripBundle\DependencyInjection
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */
class TripExtension extends Extension implements PrependExtensionInterface
{
    public function load(array $configs, ContainerBuilder $container)
    {
        $loader = new YamlFileLoader($container, new FileLocator(__DIR__ . '/../Resources/config'));
        $loader->load('services.yaml');

        $documentation = Yaml::parseFile(__DIR__ . '/../Resources/api/openapi.yaml');
        $container->getDefinition('nelmio_api_doc.describers.config.trip')->setArgument(0, $documentation);
    }

    public function prepend(ContainerBuilder $container): void{
        $doctrineConfig = $container->getExtensionConfig('doctrine_migrations');
        $container->prependExtensionConfig('doctrine_migrations', [
            'migrations_paths' => \array_merge(\array_pop($doctrineConfig)['migrations_paths'] ?? [], [
                'TripBundle\Migrations' => '@TripBundle/Migrations',
            ]),
        ]);
        $doctrineConfig = $container->getExtensionConfig('doctrine_migrations');
    }

    public function getAlias()
    {
        return 'trip';
    }
}
